// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String    @id @default(auto()) @map("_id") @db.ObjectId
  userId             String    @db.ObjectId
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  userId       String   @db.ObjectId
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

enum Role {
  RECEPTIONIST
  DOCTOR
  PATHOLOGIST
  NURSE
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
  role          Role      @default(DOCTOR)
}

model VerificationRequest {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

model Patient {
  id                              String                           @id @default(auto()) @map("_id") @db.ObjectId
  name                            String
  gender                          String
  age                             Int
  birthDate                       DateTime
  maritalStatus                   String
  occupation                      String
  race                            String
  cancer                          Boolean
  vitals                          Vitals?
  complain                        Complains?
  familyHistory                   familyHistory?
  complainHistory                 ComplainHistory?
  symptomHistory                  SymptomHistory?
  comorbidities                   Comorbidities?
  TransfusionAndTransplantHistory TransfusionAndTransplantHistory?
  PhysicalExamination             PhysicalExamination?
  transfusionTransplantHistory    transfusionTransplantHistory?
  CBC                             CBC?
  LabTests                        LabTests?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Vitals {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  patientId       String   @unique @db.ObjectId
  patient         Patient  @relation(fields: [patientId], references: [id]) // add this relation field
  height          Float
  weight          Float
  bloodPressure   String
  pulseRate       Int
  respiratoryRate Int
  temperature     Float
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Complains {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  patientId String   @unique @db.ObjectId
  patient   Patient  @relation(fields: [patientId], references: [id]) // add this relation field
  complaint String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ComplainHistory {
  id                 String  @id @default(auto()) @map("_id") @db.ObjectId
  patientId          String  @unique @db.ObjectId
  patient            Patient @relation(fields: [patientId], references: [id]) // add this relation field
  painCharacter      String
  painSite           String
  radiatingPain      Boolean
  timing             String
  alleriatingFactors String
  symptoms           String
  swellingSite       String
  severitySymptom    Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SymptomHistory {
  id                        String   @id @default(auto()) @map("_id") @db.ObjectId
  patientId                 String   @unique @db.ObjectId
  patient                   Patient  @relation(fields: [patientId], references: [id]) // add this relation field
  constitutionalSymptoms    String[]
  anemiaSymptoms            String[]
  neutropeniaSymptoms       String[]
  ThrmbocytopeniaSymptoms String[]
  lumphomaSymptoms          String[]
  hyperviscositySymptoms    String[]
  thromboembolismSymptoms   String[]
  durationSymptom           String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model familyHistory {
  id                     String   @id @default(auto()) @map("_id") @db.ObjectId
  patientId              String   @unique @db.ObjectId
  patient                Patient  @relation(fields: [patientId], references: [id]) // add this relation field
  hemotlogicalMaliqnanay String[]
}

model Comorbidities {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  patientId        String   @unique @db.ObjectId
  patient          Patient  @relation(fields: [patientId], references: [id]) // add this relation field
  hepatitis        String[]
  diabetes         String[]
  surgeryInPast    String[]
  tb               Boolean
  chemicalExposure String
  chemoTherapy     String
  toxicExposure    String
  dadiations       Boolean
  alcohol          Boolean
  smoking          Boolean
  historyOfCancer  String
  anemia           String[]
  plateletDisorder String[]
}

model TransfusionAndTransplantHistory {
  id                  String   @id @default(auto()) @map("_id") @db.ObjectId
  patientId           String   @unique @db.ObjectId
  patient             Patient  @relation(fields: [patientId], references: [id]) // add this relation field
  transfusionInPast   String[]
  transfusionReaction String[]
  transplantInPast    String[]
  medicalHistory      String[]
}

model PhysicalExamination {
  id                  String   @id @default(auto()) @map("_id") @db.ObjectId
  patientId           String   @unique @db.ObjectId
  patient             Patient  @relation(fields: [patientId], references: [id]) // add this relation field
  eyes                String[]
  mouthUlcer          String[]
  lymphadenopathy     Boolean
  visceralExamination String[]
  skin                String
  MediastinalMasses  Boolean
}

model transfusionTransplantHistory {
  id                    String   @id @default(auto()) @map("_id") @db.ObjectId
  patientId             String   @unique @db.ObjectId
  patient               Patient  @relation(fields: [patientId], references: [id]) // add this relation field
  cnsInvolvementSystems String[]
}

model CBC {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  patientId   String  @unique @db.ObjectId
  patient     Patient @relation(fields: [patientId], references: [id]) // add this relation field
  wbc         Float
  rbc         Float
  platelet    Float
  neutrophils Float
  lymphocytes Float
}

model LabTests {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  patientId  String  @unique @db.ObjectId
  patient    Patient @relation(fields: [patientId], references: [id]) // add this relation field
  cbc        Boolean
  bloodsmear Boolean
}
